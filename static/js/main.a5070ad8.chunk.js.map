{"version":3,"sources":["api/goods.js","App.js","index.js"],"names":["getAll","fetch","then","response","ok","Error","status","statusText","json","getFiveFirst","goods","sort","a","b","name","localeCompare","slice","getRed","filter","good","color","getBlue","getGreen","App","state","showGoods","callback","setState","type","onClick","style","this","length","React","Component","GoodsList","map","key","id","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"mPAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAMC,EAAe,kBAAMT,IAC/BE,MAAK,SAAAQ,GAAK,OAAIA,EACZC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SACtCE,MAAM,EAAG,OAEDC,EAAS,kBAAMjB,IACzBE,MAAK,SAAAQ,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aAE9BC,EAAU,kBAAMrB,IAC1BE,MAAK,SAAAQ,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,SAAfA,EAAKC,aAE9BE,EAAW,kBAAMtB,IAC3BE,MAAK,SAAAQ,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,UAAfA,EAAKC,aCnBrCG,E,4MACJC,MAAQ,CACNd,MAAO,I,EAGTe,UAAY,SAACC,GACXA,IACGxB,MAAK,SAAAQ,GAAK,OAAI,EAAKiB,SAAS,CAAEjB,c,4CAGnC,WAAU,IAAD,OACP,OACE,6BAEE,qDAEA,4BACEkB,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUzB,KAFhC,kBAOA,4BACE4B,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUhB,KAFhC,sBAOA,4BACEqB,MAAO,CAAEV,MAAO,OAChBQ,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUR,KAHhC,kBAQA,4BACEa,MAAO,CAAEV,MAAO,QAChBQ,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUJ,KAHhC,mBAQA,4BACES,MAAO,CAAEV,MAAO,SAChBQ,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUH,KAHhC,oBAOCS,KAAKP,MAAMd,MAAMsB,OAAS,GAAK,kBAAC,EAAD,CAAWtB,MAAOqB,KAAKP,MAAMd,a,GArDnDuB,IAAMC,WA2DlBC,EAAY,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAH,OAChB,4BACGA,EAAM0B,KAAI,SAAAjB,GAAI,OACb,wBACEkB,IAAKlB,EAAKmB,GACVR,MAAO,CAAEV,MAAM,GAAD,OAAKD,EAAKC,SAEvBD,EAAKL,WAgBdqB,EAAUI,aAAe,CACvB7B,MAAO,IAGMa,QCzFfiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a5070ad8.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const getFiveFirst = () => getAll()\n  .then(goods => goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5));\n\nexport const getRed = () => getAll()\n  .then(goods => goods.filter(good => good.color === 'red'));\n\nexport const getBlue = () => getAll()\n  .then(goods => goods.filter(good => good.color === 'blue'));\n\nexport const getGreen = () => getAll()\n  .then(goods => goods.filter(good => good.color === 'green'));\n","import React from 'react';\n\nimport './App.scss';\n\nimport PropTypes from 'prop-types';\nimport { getAll, getFiveFirst, getRed, getBlue, getGreen } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  showGoods = (callback) => {\n    callback()\n      .then(goods => this.setState({ goods }));\n  }\n\n  render() {\n    return (\n      <div>\n\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => this.showGoods(getAll)}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.showGoods(getFiveFirst)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          style={{ color: 'red' }}\n          type=\"button\"\n          onClick={() => this.showGoods(getRed)}\n        >\n          Load red goods\n        </button>\n\n        <button\n          style={{ color: 'blue' }}\n          type=\"button\"\n          onClick={() => this.showGoods(getBlue)}\n        >\n          Load blue goods\n        </button>\n\n        <button\n          style={{ color: 'green' }}\n          type=\"button\"\n          onClick={() => this.showGoods(getGreen)}\n        >\n          Load green goods\n        </button>\n        {this.state.goods.length > 0 && <GoodsList goods={this.state.goods} />}\n      </div>\n    );\n  }\n}\n\nconst GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nconst goodsType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n});\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(goodsType),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}